/* Generated by opensource COBOL 4J 1.1.2 */
import java.io.UnsupportedEncodingException;
import jp.osscons.opensourcecobol.libcobj.*;
import jp.osscons.opensourcecobol.libcobj.common.*;
import jp.osscons.opensourcecobol.libcobj.data.*;
import jp.osscons.opensourcecobol.libcobj.exceptions.*;
import jp.osscons.opensourcecobol.libcobj.termio.*;
import jp.osscons.opensourcecobol.libcobj.call.*;
import jp.osscons.opensourcecobol.libcobj.file.*;
import jp.osscons.opensourcecobol.libcobj.ui.*;
import java.util.Optional;
import java.lang.NullPointerException;
import java.lang.IndexOutOfBoundsException;

public class FETCHTBL implements CobolRunnable {

  private boolean initialized = false;
  private CobolModule module;
  private int entry;

  private CobolRunnable cob_unifunc;


  @Override
  public int run(CobolDataStorage... argStorages) {
    return FETCHTBL_(0, argStorages);
  }

  @Override
  public void cancel() {
    FETCHTBL_(-1);
  }

  @Override
  public boolean isActive() {
    return false;
  }

  public CobolResultSet execute () {
    int returnCode = run_module(0);
    return new CobolResultSet(returnCode);
  }

  public int FETCHTBL_ (int entry, CobolDataStorage ...argStorages) {
    this.entry = entry;
    return this.run_module(entry);
  }

  int run_module (int entry) {
    this.module = new CobolModule(null, null, null, null, 0, '.', '$', ',', 1, 1, 1, 0, null );

    /* Start of function code */

    /* CANCEL callback handling */
    if (entry < 0) {
    	if (!this.initialized) {
    		CobolDecimal.cobInitNumeric();
    		return 0;
    	}
    	this.initialized = false;
    	return 0;
    }

    /* Push module stack */
    CobolModule.push (module);

    /* Initialize program */
    if (!this.initialized) {
      module.setProgramId("FETCHTBL");

      b_RETURN_CODE.set((int)0);
      b_D_EMP_NO__D_EMP_REC.fillBytes('0', 4);
      b_WORK$1__D_EMP_REC.fillBytes(' ', 22);
      f_D_EMP_SALARY__D_EMP_REC.moveFrom (CobolConstant.zero);

      b_DBNAME.fillBytes (32, 30);
      b_USERNAME.fillBytes (32, 30);
      b_PASSWD.fillBytes (32, 10);
      b_EMP_NO__EMP_REC_VARS.fillBytes('0', 4);
      b_EMP_NAME__EMP_REC_VARS.fillBytes(' ', 20);
      b_EMP_SALARY__EMP_REC_VARS.fillBytes('0', 4);
      b_EMP_CNT.fillBytes('0', 4);
      b_SQLCAID__SQLCA.fillBytes(' ', 8);
      b_SQLCABC__SQLCA.fillBytes(0, 8);
      b_SQLERRML__SQLERRM__SQLCA.fillBytes(0, 2);
      b_SQLERRMC__SQLERRM__SQLCA.fillBytes(' ', 70);

      b_SQLERRP__SQLCA.fillBytes(' ', 8);
      b_SQLERRD__SQLCA.getSubDataStorage(4 * 0).fillBytes(0, 24);
      b_SQLWARN__SQLCA.fillBytes(' ', 13);
      b_WORK$3__SQ0001.setBytes (str_0_SELECT, 26);

      b_WORK$4__SQ0001.setByte(0, 0);
      b_WORK$5__SQ0002.setBytes (str_1_SELECT, 60);

      b_WORK$6__SQ0002.setByte(0, 0);
      b_WORK$7__SQ0003.setBytes (str_2_DISCONNECT, 14);

      b_WORK$8__SQ0003.setByte(0, 0);
      this.initialized = true;
    }
    /* PROCEDURE DIVISION */
    try{
      CobolStopRunException.dummy();
      CobolGoBackException.dummy();
      /* Entry dispatch */
      execEntry(l_FETCHTBL);

    } catch(CobolGoBackException e) {
      return e.getReturnCode();
    } catch(CobolStopRunException e) {
      CobolStopRunException.stopRun();
      System.exit(e.getReturnCode());
    }
    /* Pop module stack */
    CobolModule.pop();

    /* Program return */
    return b_RETURN_CODE.intValue();
  }
  public CobolControl[] contList = {
    new CobolControl(0, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_FETCHTBL]);
      }
    },
    /* Entry FETCHTBL */
    new CobolControl(l_FETCHTBL, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_MAIN_SECTION]);
      }
    },
    /* MAIN SECTION */
    new CobolControl(l_MAIN_SECTION, CobolControl.LabelType.section) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_MAIN_SECTION__MAIN_RTN]);
      }
    },
    /* MAIN-RTN */
    new CobolControl(l_MAIN_SECTION__MAIN_RTN, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* FETCHTBL.cob:61: DISPLAY */
        {
          CobolTerminal.display (0, 1, 1, c_1);
        }
        /* FETCHTBL.cob:67: MOVE */
        {
          f_DBNAME.moveFrom (c_2_testdb);
        }
        /* FETCHTBL.cob:68: MOVE */
        {
          f_USERNAME.moveFrom (c_3_test_user);
        }
        /* FETCHTBL.cob:69: MOVE */
        {
          b_PASSWD.setBytes (str_3_test, 10);
        }
        /* FETCHTBL.cob:73: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA, f_USERNAME, c_4_30, f_PASSWD, c_5_10, f_DBNAME, c_4_30);
          CobolCallParams.callParams = 7;
          call_OCESQLConnect = CobolResolve.resolve(null, "OCESQLConnect", call_OCESQLConnect);
          b_RETURN_CODE.set (call_OCESQLConnect.run (b_SQLCA, b_USERNAME, CobolDataStorage.primitiveToDataStorage(30), b_PASSWD, CobolDataStorage.primitiveToDataStorage(10), b_DBNAME, CobolDataStorage.primitiveToDataStorage(30)));
        }
        /* FETCHTBL.cob:82: IF */
        {
          if (((long)b_SQLCODE__SQLCA.cmpS32Binary (0) != 0L))
            {
              /* FETCHTBL.cob:82: PERFORM */
              /* PERFORM ERROR-RTN */
              CobolControl.perform(contList, l_MAIN_SECTION__ERROR_RTN).run();
              /* FETCHTBL.cob:82: STOP */
              {
                CobolStopRunException.throwException (b_RETURN_CODE.intValue());
              }
            }
        }
        /* FETCHTBL.cob:88: CALL */
        {
          CobolModule.getCurrentModule ().setParameters ();
          CobolCallParams.callParams = 0;
          call_OCESQLStartSQL = CobolResolve.resolve(null, "OCESQLStartSQL", call_OCESQLStartSQL);
          b_RETURN_CODE.set (call_OCESQLStartSQL.run ());
        }
        /* FETCHTBL.cob:90: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (c_6_1, c_7_4, c_8_0, f_EMP_CNT);
          CobolCallParams.callParams = 4;
          call_OCESQLSetResultParams = CobolResolve.resolve(null, "OCESQLSetResultParams", call_OCESQLSetResultParams);
          b_RETURN_CODE.set (call_OCESQLSetResultParams.run (CobolDataStorage.primitiveToDataStorage(1), CobolDataStorage.primitiveToDataStorage(4), CobolDataStorage.primitiveToDataStorage(0), b_EMP_CNT));
        }
        /* FETCHTBL.cob:96: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA, f_SQ0001, c_8_0, c_6_1);
          CobolCallParams.callParams = 4;
          call_OCESQLExecSelectIntoOne = CobolResolve.resolve(null, "OCESQLExecSelectIntoOne", call_OCESQLExecSelectIntoOne);
          b_RETURN_CODE.set (call_OCESQLExecSelectIntoOne.run (b_SQLCA, b_SQ0001, CobolDataStorage.primitiveToDataStorage(0), CobolDataStorage.primitiveToDataStorage(1)));
        }
        /* FETCHTBL.cob:102: CALL */
        {
          CobolModule.getCurrentModule ().setParameters ();
          CobolCallParams.callParams = 0;
          call_OCESQLEndSQL = CobolResolve.resolve(null, "OCESQLEndSQL", call_OCESQLEndSQL);
          b_RETURN_CODE.set (call_OCESQLEndSQL.run ());
        }
        /* FETCHTBL.cob:104: DISPLAY */
        {
          CobolTerminal.display (0, 1, 2, c_9_TOTAL, f_EMP_CNT);
        }
        /* FETCHTBL.cob:113: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA, c_10_FETCHTBL_C1, f_SQ0002);
          CobolCallParams.callParams = 3;
          call_OCESQLCursorDeclare = CobolResolve.resolve(null, "OCESQLCursorDeclare", call_OCESQLCursorDeclare);
          b_RETURN_CODE.set (call_OCESQLCursorDeclare.run (b_SQLCA, str_4_FETCHTBL_C1, b_SQ0002));
        }
        /* FETCHTBL.cob:121: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA, c_10_FETCHTBL_C1);
          CobolCallParams.callParams = 2;
          call_OCESQLCursorOpen = CobolResolve.resolve(null, "OCESQLCursorOpen", call_OCESQLCursorOpen);
          b_RETURN_CODE.set (call_OCESQLCursorOpen.run (b_SQLCA, str_5_FETCHTBL_C1));
        }
        /* FETCHTBL.cob:127: DISPLAY */
        {
          CobolTerminal.display (0, 1, 1, c_11);
        }
        /* FETCHTBL.cob:128: DISPLAY */
        {
          CobolTerminal.display (0, 1, 1, c_12_NO);
        }
        /* FETCHTBL.cob:129: DISPLAY */
        {
          CobolTerminal.display (0, 1, 1, c_11);
        }
        /* FETCHTBL.cob:133: CALL */
        {
          CobolModule.getCurrentModule ().setParameters ();
          CobolCallParams.callParams = 0;
          call_OCESQLStartSQL = CobolResolve.resolve(null, "OCESQLStartSQL", call_OCESQLStartSQL);
          b_RETURN_CODE.set (call_OCESQLStartSQL.run ());
        }
        /* FETCHTBL.cob:135: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (c_13_3, c_7_4, c_8_0, f_EMP_NO__EMP_REC_VARS);
          CobolCallParams.callParams = 4;
          call_OCESQLSetResultParams = CobolResolve.resolve(null, "OCESQLSetResultParams", call_OCESQLSetResultParams);
          b_RETURN_CODE.set (call_OCESQLSetResultParams.run (CobolDataStorage.primitiveToDataStorage(3), CobolDataStorage.primitiveToDataStorage(4), CobolDataStorage.primitiveToDataStorage(0), b_EMP_NO__EMP_REC_VARS));
        }
        /* FETCHTBL.cob:141: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (c_14_16, c_15_20, c_8_0, f_EMP_NAME__EMP_REC_VARS);
          CobolCallParams.callParams = 4;
          call_OCESQLSetResultParams = CobolResolve.resolve(null, "OCESQLSetResultParams", call_OCESQLSetResultParams);
          b_RETURN_CODE.set (call_OCESQLSetResultParams.run (CobolDataStorage.primitiveToDataStorage(16), CobolDataStorage.primitiveToDataStorage(20), CobolDataStorage.primitiveToDataStorage(0), b_EMP_NAME__EMP_REC_VARS));
        }
        /* FETCHTBL.cob:147: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (c_13_3, c_7_4, c_8_0, f_EMP_SALARY__EMP_REC_VARS);
          CobolCallParams.callParams = 4;
          call_OCESQLSetResultParams = CobolResolve.resolve(null, "OCESQLSetResultParams", call_OCESQLSetResultParams);
          b_RETURN_CODE.set (call_OCESQLSetResultParams.run (CobolDataStorage.primitiveToDataStorage(3), CobolDataStorage.primitiveToDataStorage(4), CobolDataStorage.primitiveToDataStorage(0), b_EMP_SALARY__EMP_REC_VARS));
        }
        /* FETCHTBL.cob:153: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA, c_10_FETCHTBL_C1);
          CobolCallParams.callParams = 2;
          call_OCESQLCursorFetchOne = CobolResolve.resolve(null, "OCESQLCursorFetchOne", call_OCESQLCursorFetchOne);
          b_RETURN_CODE.set (call_OCESQLCursorFetchOne.run (b_SQLCA, str_6_FETCHTBL_C1));
        }
        /* FETCHTBL.cob:157: CALL */
        {
          CobolModule.getCurrentModule ().setParameters ();
          CobolCallParams.callParams = 0;
          call_OCESQLEndSQL = CobolResolve.resolve(null, "OCESQLEndSQL", call_OCESQLEndSQL);
          b_RETURN_CODE.set (call_OCESQLEndSQL.run ());
        }
        /* FETCHTBL.cob:159: PERFORM */
        for (;;)
          {
            if (((long)b_SQLCODE__SQLCA.cmpS32Binary (0) != 0L))
              break;
            {
              /* FETCHTBL.cob:160: MOVE */
              {
                f_D_EMP_NO__D_EMP_REC.moveFrom (f_EMP_NO__EMP_REC_VARS);
              }
              /* FETCHTBL.cob:161: MOVE */
              {
                b_D_EMP_NAME__D_EMP_REC.setBytes (b_EMP_NAME__EMP_REC_VARS, 20);
              }
              /* FETCHTBL.cob:162: MOVE */
              {
                f_D_EMP_SALARY__D_EMP_REC.moveFrom (f_EMP_SALARY__EMP_REC_VARS);
              }
              /* FETCHTBL.cob:163: DISPLAY */
              {
                CobolTerminal.display (0, 1, 1, f_D_EMP_REC);
              }
              /* FETCHTBL.cob:167: CALL */
              {
                CobolModule.getCurrentModule ().setParameters ();
                CobolCallParams.callParams = 0;
                call_OCESQLStartSQL = CobolResolve.resolve(null, "OCESQLStartSQL", call_OCESQLStartSQL);
                b_RETURN_CODE.set (call_OCESQLStartSQL.run ());
              }
              /* FETCHTBL.cob:169: CALL */
              {
                CobolModule.getCurrentModule ().setParameters (c_13_3, c_7_4, c_8_0, f_EMP_NO__EMP_REC_VARS);
                CobolCallParams.callParams = 4;
                call_OCESQLSetResultParams = CobolResolve.resolve(null, "OCESQLSetResultParams", call_OCESQLSetResultParams);
                b_RETURN_CODE.set (call_OCESQLSetResultParams.run (CobolDataStorage.primitiveToDataStorage(3), CobolDataStorage.primitiveToDataStorage(4), CobolDataStorage.primitiveToDataStorage(0), b_EMP_NO__EMP_REC_VARS));
              }
              /* FETCHTBL.cob:175: CALL */
              {
                CobolModule.getCurrentModule ().setParameters (c_14_16, c_15_20, c_8_0, f_EMP_NAME__EMP_REC_VARS);
                CobolCallParams.callParams = 4;
                call_OCESQLSetResultParams = CobolResolve.resolve(null, "OCESQLSetResultParams", call_OCESQLSetResultParams);
                b_RETURN_CODE.set (call_OCESQLSetResultParams.run (CobolDataStorage.primitiveToDataStorage(16), CobolDataStorage.primitiveToDataStorage(20), CobolDataStorage.primitiveToDataStorage(0), b_EMP_NAME__EMP_REC_VARS));
              }
              /* FETCHTBL.cob:181: CALL */
              {
                CobolModule.getCurrentModule ().setParameters (c_13_3, c_7_4, c_8_0, f_EMP_SALARY__EMP_REC_VARS);
                CobolCallParams.callParams = 4;
                call_OCESQLSetResultParams = CobolResolve.resolve(null, "OCESQLSetResultParams", call_OCESQLSetResultParams);
                b_RETURN_CODE.set (call_OCESQLSetResultParams.run (CobolDataStorage.primitiveToDataStorage(3), CobolDataStorage.primitiveToDataStorage(4), CobolDataStorage.primitiveToDataStorage(0), b_EMP_SALARY__EMP_REC_VARS));
              }
              /* FETCHTBL.cob:187: CALL */
              {
                CobolModule.getCurrentModule ().setParameters (f_SQLCA, c_10_FETCHTBL_C1);
                CobolCallParams.callParams = 2;
                call_OCESQLCursorFetchOne = CobolResolve.resolve(null, "OCESQLCursorFetchOne", call_OCESQLCursorFetchOne);
                b_RETURN_CODE.set (call_OCESQLCursorFetchOne.run (b_SQLCA, str_7_FETCHTBL_C1));
              }
              /* FETCHTBL.cob:191: CALL */
              {
                CobolModule.getCurrentModule ().setParameters ();
                CobolCallParams.callParams = 0;
                call_OCESQLEndSQL = CobolResolve.resolve(null, "OCESQLEndSQL", call_OCESQLEndSQL);
                b_RETURN_CODE.set (call_OCESQLEndSQL.run ());
              }
            }
          }
        /* FETCHTBL.cob:199: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA, c_10_FETCHTBL_C1);
          CobolCallParams.callParams = 2;
          call_OCESQLCursorClose = CobolResolve.resolve(null, "OCESQLCursorClose", call_OCESQLCursorClose);
          b_RETURN_CODE.set (call_OCESQLCursorClose.run (b_SQLCA, str_8_FETCHTBL_C1));
        }
        /* FETCHTBL.cob:209: CALL */
        {
          CobolModule.getCurrentModule ().setParameters ();
          CobolCallParams.callParams = 0;
          call_OCESQLStartSQL = CobolResolve.resolve(null, "OCESQLStartSQL", call_OCESQLStartSQL);
          b_RETURN_CODE.set (call_OCESQLStartSQL.run ());
        }
        /* FETCHTBL.cob:211: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA, c_16_COMMIT);
          CobolCallParams.callParams = 2;
          call_OCESQLExec = CobolResolve.resolve(null, "OCESQLExec", call_OCESQLExec);
          b_RETURN_CODE.set (call_OCESQLExec.run (b_SQLCA, str_9_COMMIT));
        }
        /* FETCHTBL.cob:215: CALL */
        {
          CobolModule.getCurrentModule ().setParameters ();
          CobolCallParams.callParams = 0;
          call_OCESQLEndSQL = CobolResolve.resolve(null, "OCESQLEndSQL", call_OCESQLEndSQL);
          b_RETURN_CODE.set (call_OCESQLEndSQL.run ());
        }
        /* FETCHTBL.cob:222: CALL */
        {
          CobolModule.getCurrentModule ().setParameters (f_SQLCA);
          CobolCallParams.callParams = 1;
          call_OCESQLDisconnect = CobolResolve.resolve(null, "OCESQLDisconnect", call_OCESQLDisconnect);
          b_RETURN_CODE.set (call_OCESQLDisconnect.run (b_SQLCA));
        }
        /* FETCHTBL.cob:227: DISPLAY */
        {
          CobolTerminal.display (0, 1, 1, c_17);
        }
        /* FETCHTBL.cob:228: STOP */
        {
          CobolStopRunException.throwException (b_RETURN_CODE.intValue());
        }

        return Optional.of(contList[l_MAIN_SECTION__ERROR_RTN]);
      }
    },
    /* ERROR-RTN */
    new CobolControl(l_MAIN_SECTION__ERROR_RTN, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* FETCHTBL.cob:233: DISPLAY */
        {
          CobolTerminal.display (0, 1, 1, c_18);
        }
        /* FETCHTBL.cob:234: DISPLAY */
        {
          CobolTerminal.display (0, 0, 3, c_19_SQLCODE, f_SQLCODE__SQLCA, c_20);
        }
        /* FETCHTBL.cob:235: EVALUATE */
        {
          if (((long)b_SQLCODE__SQLCA.cmpS32Binary (10) == 0L))
            {
              /* FETCHTBL.cob:237: DISPLAY */
              {
                CobolTerminal.display (0, 1, 1, c_21_Record);
              }
            }
          else
            if (((long)b_SQLCODE__SQLCA.cmpS32Binary (-1) == 0L))
              {
                /* FETCHTBL.cob:239: DISPLAY */
                {
                  CobolTerminal.display (0, 1, 1, c_22_Connection);
                }
              }
            else
              if (((long)b_SQLCODE__SQLCA.cmpS32Binary (-20) == 0L))
                {
                  /* FETCHTBL.cob:241: DISPLAY */
                  {
                    CobolTerminal.display (0, 1, 1, c_23_Internal);
                  }
                }
              else
                if (((long)b_SQLCODE__SQLCA.cmpS32Binary (-30) == 0L))
                  {
                    /* FETCHTBL.cob:243: DISPLAY */
                    {
                      CobolTerminal.display (0, 1, 1, c_24_PostgreSQL);
                    }
                    /* FETCHTBL.cob:244: DISPLAY */
                    {
                      CobolTerminal.display (0, 1, 2, c_25_ERRCODE, f_SQLSTATE__SQLCA);
                    }
                    /* FETCHTBL.cob:245: DISPLAY */
                    {
                      CobolTerminal.display (0, 1, 1, f_SQLERRMC__SQLERRM__SQLCA);
                    }
                    /* FETCHTBL.cob:250: CALL */
                    {
                      CobolModule.getCurrentModule ().setParameters ();
                      CobolCallParams.callParams = 0;
                      call_OCESQLStartSQL = CobolResolve.resolve(null, "OCESQLStartSQL", call_OCESQLStartSQL);
                      b_RETURN_CODE.set (call_OCESQLStartSQL.run ());
                    }
                    /* FETCHTBL.cob:252: CALL */
                    {
                      CobolModule.getCurrentModule ().setParameters (f_SQLCA, c_26_ROLLBACK);
                      CobolCallParams.callParams = 2;
                      call_OCESQLExec = CobolResolve.resolve(null, "OCESQLExec", call_OCESQLExec);
                      b_RETURN_CODE.set (call_OCESQLExec.run (b_SQLCA, str_10_ROLLBACK));
                    }
                    /* FETCHTBL.cob:256: CALL */
                    {
                      CobolModule.getCurrentModule ().setParameters ();
                      CobolCallParams.callParams = 0;
                      call_OCESQLEndSQL = CobolResolve.resolve(null, "OCESQLEndSQL", call_OCESQLEndSQL);
                      b_RETURN_CODE.set (call_OCESQLEndSQL.run ());
                    }
                  }
                else
                  {
                    /* FETCHTBL.cob:259: DISPLAY */
                    {
                      CobolTerminal.display (0, 1, 1, c_27_Undefined);
                    }
                    /* FETCHTBL.cob:260: DISPLAY */
                    {
                      CobolTerminal.display (0, 1, 2, c_25_ERRCODE, f_SQLSTATE__SQLCA);
                    }
                    /* FETCHTBL.cob:261: DISPLAY */
                    {
                      CobolTerminal.display (0, 1, 1, f_SQLERRMC__SQLERRM__SQLCA);
                    }
                  }
        }
        return Optional.of(CobolControl.pure());
      }
    },
    CobolControl.pure()
  };
  public void execEntry(int start) throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
    Optional<CobolControl> nextLabel = Optional.of(contList[start]);
    while(nextLabel.isPresent()) {
      CobolControl section = nextLabel.get();
      nextLabel = section.run();
    }
  }

  public static void main(String[] args)
  {
    CobolUtil.cob_init(args, false);
    CobolDecimal.cobInitNumeric();
    new FETCHTBL().FETCHTBL_(0);
    CobolStopRunException.stopRun();
  }

  public FETCHTBL()
  {
    init();
  }

  public void init() 
  {
    try {
      /* Data storage */

      cob_unifunc = null;

      /* PROGRAM-ID : FETCHTBL */
      b_RETURN_CODE = new CobolDataStorage(4);	/* RETURN-CODE */
      b_D_EMP_REC = new CobolDataStorage(32);	/* D-EMP-REC */
      b_DBNAME = new CobolDataStorage(30);	/* DBNAME */
      b_USERNAME = new CobolDataStorage(30);	/* USERNAME */
      b_PASSWD = new CobolDataStorage(10);	/* PASSWD */
      b_EMP_REC_VARS = new CobolDataStorage(28);	/* EMP-REC-VARS */
      b_EMP_CNT = new CobolDataStorage(4);	/* EMP-CNT */
      b_SQLCA = new CobolDataStorage(133);	/* SQLCA */
      b_SQ0001 = new CobolDataStorage(27);	/* SQ0001 */
      b_SQ0002 = new CobolDataStorage(61);	/* SQ0002 */
      b_SQ0003 = new CobolDataStorage(15);	/* SQ0003 */
      b_D_EMP_NAME__D_EMP_REC = b_D_EMP_REC.getSubDataStorage(5);
      b_D_EMP_NO__D_EMP_REC = b_D_EMP_REC;
      b_D_EMP_SALARY__D_EMP_REC = b_D_EMP_REC.getSubDataStorage(26);
      b_WORK$1__D_EMP_REC = b_D_EMP_REC.getSubDataStorage(4);
      b_EMP_NAME__EMP_REC_VARS = b_EMP_REC_VARS.getSubDataStorage(4);
      b_EMP_NO__EMP_REC_VARS = b_EMP_REC_VARS;
      b_EMP_SALARY__EMP_REC_VARS = b_EMP_REC_VARS.getSubDataStorage(24);
      b_WORK$3__SQ0001 = b_SQ0001;
      b_WORK$4__SQ0001 = b_SQ0001.getSubDataStorage(26);
      b_WORK$5__SQ0002 = b_SQ0002;
      b_WORK$6__SQ0002 = b_SQ0002.getSubDataStorage(60);
      b_WORK$7__SQ0003 = b_SQ0003;
      b_WORK$8__SQ0003 = b_SQ0003.getSubDataStorage(14);
      b_SQLCABC__SQLCA = b_SQLCA.getSubDataStorage(8);
      b_SQLCAID__SQLCA = b_SQLCA;
      b_SQLCODE__SQLCA = b_SQLCA.getSubDataStorage(12);
      b_SQLERRD__SQLCA = b_SQLCA.getSubDataStorage(96);
      b_SQLERRMC__SQLERRM__SQLCA = b_SQLCA.getSubDataStorage(18);
      b_SQLERRML__SQLERRM__SQLCA = b_SQLCA.getSubDataStorage(16);
      b_SQLERRP__SQLCA = b_SQLCA.getSubDataStorage(88);
      b_SQLSTATE__SQLCA = b_SQLCA.getSubDataStorage(128);
      b_SQLWARN__SQLCA = b_SQLCA.getSubDataStorage(120);

      /* End of data storage */


      initAttr();

      /* Fields */

      /* PROGRAM-ID : FETCHTBL */
      f_D_EMP_REC	= CobolFieldFactory.makeCobolField(32, b_D_EMP_REC, a_3);	/* D-EMP-REC */
      f_D_EMP_NO__D_EMP_REC	= CobolFieldFactory.makeCobolField(4, b_D_EMP_NO__D_EMP_REC, a_4);	/* D-EMP-NO */
      f_D_EMP_SALARY__D_EMP_REC	= CobolFieldFactory.makeCobolField(6, b_D_EMP_SALARY__D_EMP_REC, a_1);	/* D-EMP-SALARY */
      f_DBNAME	= CobolFieldFactory.makeCobolField(30, b_DBNAME, a_2);	/* DBNAME */
      f_USERNAME	= CobolFieldFactory.makeCobolField(30, b_USERNAME, a_2);	/* USERNAME */
      f_PASSWD	= CobolFieldFactory.makeCobolField(10, b_PASSWD, a_2);	/* PASSWD */
      f_EMP_NO__EMP_REC_VARS	= CobolFieldFactory.makeCobolField(4, b_EMP_NO__EMP_REC_VARS, a_5);	/* EMP-NO */
      f_EMP_NAME__EMP_REC_VARS	= CobolFieldFactory.makeCobolField(20, b_EMP_NAME__EMP_REC_VARS, a_2);	/* EMP-NAME */
      f_EMP_SALARY__EMP_REC_VARS	= CobolFieldFactory.makeCobolField(4, b_EMP_SALARY__EMP_REC_VARS, a_5);	/* EMP-SALARY */
      f_EMP_CNT	= CobolFieldFactory.makeCobolField(4, b_EMP_CNT, a_4);	/* EMP-CNT */
      f_SQLCA	= CobolFieldFactory.makeCobolField(133, b_SQLCA, a_3);	/* SQLCA */
      f_SQLCODE__SQLCA	= CobolFieldFactory.makeCobolField(4, b_SQLCODE__SQLCA, a_6);	/* SQLCODE */
      f_SQLERRMC__SQLERRM__SQLCA	= CobolFieldFactory.makeCobolField(70, b_SQLERRMC__SQLERRM__SQLCA, a_2);	/* SQLERRMC */
      f_SQLSTATE__SQLCA	= CobolFieldFactory.makeCobolField(5, b_SQLSTATE__SQLCA, a_2);	/* SQLSTATE */
      f_SQ0001	= CobolFieldFactory.makeCobolField(27, b_SQ0001, a_3);	/* SQ0001 */
      f_SQ0002	= CobolFieldFactory.makeCobolField(61, b_SQ0002, a_3);	/* SQ0002 */

      /* End of fields */


      /* Constants */

      c_1	= CobolFieldFactory.makeCobolField(24, str_11, a_2);
      c_2_testdb	= CobolFieldFactory.makeCobolField(6, str_12_testdb, a_2);
      c_3_test_user	= CobolFieldFactory.makeCobolField(9, str_13_test_user, a_2);
      c_4_30	= CobolFieldFactory.makeCobolField(2, "30", a_7);
      c_5_10	= CobolFieldFactory.makeCobolField(2, "10", a_7);
      c_6_1	= CobolFieldFactory.makeCobolField(1, "1", a_8);
      c_7_4	= CobolFieldFactory.makeCobolField(1, "4", a_8);
      c_8_0	= CobolFieldFactory.makeCobolField(1, "0", a_8);
      c_9_TOTAL	= CobolFieldFactory.makeCobolField(14, str_14_TOTAL, a_2);
      c_10_FETCHTBL_C1	= CobolFieldFactory.makeCobolField(12, str_15_FETCHTBL_C1, a_2);
      c_11	= CobolFieldFactory.makeCobolField(32, str_16, a_2);
      c_12_NO	= CobolFieldFactory.makeCobolField(32, str_17_NO, a_2);
      c_13_3	= CobolFieldFactory.makeCobolField(1, "3", a_8);
      c_14_16	= CobolFieldFactory.makeCobolField(2, "16", a_7);
      c_15_20	= CobolFieldFactory.makeCobolField(2, "20", a_7);
      c_16_COMMIT	= CobolFieldFactory.makeCobolField(7, str_18_COMMIT, a_2);
      c_17	= CobolFieldFactory.makeCobolField(25, str_19, a_2);
      c_18	= CobolFieldFactory.makeCobolField(17, str_20, a_2);
      c_19_SQLCODE	= CobolFieldFactory.makeCobolField(9, str_21_SQLCODE, a_2);
      c_20	= CobolFieldFactory.makeCobolField(1, str_22, a_2);
      c_21_Record	= CobolFieldFactory.makeCobolField(16, str_23_Record, a_2);
      c_22_Connection	= CobolFieldFactory.makeCobolField(17, str_24_Connection, a_2);
      c_23_Internal	= CobolFieldFactory.makeCobolField(14, str_25_Internal, a_2);
      c_24_PostgreSQL	= CobolFieldFactory.makeCobolField(16, str_26_PostgreSQL, a_2);
      c_25_ERRCODE	= CobolFieldFactory.makeCobolField(9, str_27_ERRCODE, a_2);
      c_26_ROLLBACK	= CobolFieldFactory.makeCobolField(9, str_28_ROLLBACK, a_2);
      c_27_Undefined	= CobolFieldFactory.makeCobolField(15, str_29_Undefined, a_2);

    } catch(NullPointerException e) {
      System.out.println("Error - NullpointerException");
    } catch(IndexOutOfBoundsException e) {
      System.out.println("Error - IndexOutOfBoundsException");
    }
  }

  private void initAttr() {
    /* Attributes */

    a_1 = new CobolFieldAttribute (36, 4, 0, 1, "-\002\000\000\000,\001\000\000\000-\002\000\000\0009\001\000\000\000");
    a_2 = new CobolFieldAttribute (33, 0, 0, 0, null);
    a_3 = new CobolFieldAttribute (1, 0, 0, 0, null);
    a_4 = new CobolFieldAttribute (16, 4, 0, 0, null);
    a_5 = new CobolFieldAttribute (16, 4, 0, 1, null);
    a_6 = new CobolFieldAttribute (17, 9, 0, 1, null);
    a_7 = new CobolFieldAttribute (16, 2, 0, 0, null);
    a_8 = new CobolFieldAttribute (16, 1, 0, 0, null);

  }

  /* Data storage */

  /* PROGRAM-ID : FETCHTBL */
  private CobolDataStorage b_RETURN_CODE;	/* RETURN-CODE */
  private CobolDataStorage b_D_EMP_REC;	/* D-EMP-REC */
  private CobolDataStorage b_DBNAME;	/* DBNAME */
  private CobolDataStorage b_USERNAME;	/* USERNAME */
  private CobolDataStorage b_PASSWD;	/* PASSWD */
  private CobolDataStorage b_EMP_REC_VARS;	/* EMP-REC-VARS */
  private CobolDataStorage b_EMP_CNT;	/* EMP-CNT */
  private CobolDataStorage b_SQLCA;	/* SQLCA */
  private CobolDataStorage b_SQ0001;	/* SQ0001 */
  private CobolDataStorage b_SQ0002;	/* SQ0002 */
  private CobolDataStorage b_SQ0003;	/* SQ0003 */
  private CobolDataStorage b_D_EMP_NAME__D_EMP_REC;
  private CobolDataStorage b_D_EMP_NO__D_EMP_REC;
  private CobolDataStorage b_D_EMP_SALARY__D_EMP_REC;
  private CobolDataStorage b_WORK$1__D_EMP_REC;
  private CobolDataStorage b_EMP_NAME__EMP_REC_VARS;
  private CobolDataStorage b_EMP_NO__EMP_REC_VARS;
  private CobolDataStorage b_EMP_SALARY__EMP_REC_VARS;
  private CobolDataStorage b_WORK$3__SQ0001;
  private CobolDataStorage b_WORK$4__SQ0001;
  private CobolDataStorage b_WORK$5__SQ0002;
  private CobolDataStorage b_WORK$6__SQ0002;
  private CobolDataStorage b_WORK$7__SQ0003;
  private CobolDataStorage b_WORK$8__SQ0003;
  private CobolDataStorage b_SQLCABC__SQLCA;
  private CobolDataStorage b_SQLCAID__SQLCA;
  private CobolDataStorage b_SQLCODE__SQLCA;
  private CobolDataStorage b_SQLERRD__SQLCA;
  private CobolDataStorage b_SQLERRMC__SQLERRM__SQLCA;
  private CobolDataStorage b_SQLERRML__SQLERRM__SQLCA;
  private CobolDataStorage b_SQLERRP__SQLCA;
  private CobolDataStorage b_SQLSTATE__SQLCA;
  private CobolDataStorage b_SQLWARN__SQLCA;

  /* End of data storage */


  /* Fields */

  /* PROGRAM-ID : FETCHTBL */
  private AbstractCobolField f_D_EMP_REC;	/* D-EMP-REC */
  private AbstractCobolField f_D_EMP_NO__D_EMP_REC;	/* D-EMP-NO */
  private AbstractCobolField f_D_EMP_SALARY__D_EMP_REC;	/* D-EMP-SALARY */
  private AbstractCobolField f_DBNAME;	/* DBNAME */
  private AbstractCobolField f_USERNAME;	/* USERNAME */
  private AbstractCobolField f_PASSWD;	/* PASSWD */
  private AbstractCobolField f_EMP_NO__EMP_REC_VARS;	/* EMP-NO */
  private AbstractCobolField f_EMP_NAME__EMP_REC_VARS;	/* EMP-NAME */
  private AbstractCobolField f_EMP_SALARY__EMP_REC_VARS;	/* EMP-SALARY */
  private AbstractCobolField f_EMP_CNT;	/* EMP-CNT */
  private AbstractCobolField f_SQLCA;	/* SQLCA */
  private AbstractCobolField f_SQLCODE__SQLCA;	/* SQLCODE */
  private AbstractCobolField f_SQLERRMC__SQLERRM__SQLCA;	/* SQLERRMC */
  private AbstractCobolField f_SQLSTATE__SQLCA;	/* SQLSTATE */
  private AbstractCobolField f_SQ0001;	/* SQ0001 */
  private AbstractCobolField f_SQ0002;	/* SQ0002 */

  /* End of fields */


  private static AbstractCobolField f_native;

  /* Constants */

  private AbstractCobolField c_27_Undefined;
  private AbstractCobolField c_26_ROLLBACK;
  private AbstractCobolField c_25_ERRCODE;
  private AbstractCobolField c_24_PostgreSQL;
  private AbstractCobolField c_23_Internal;
  private AbstractCobolField c_22_Connection;
  private AbstractCobolField c_21_Record;
  private AbstractCobolField c_20;
  private AbstractCobolField c_19_SQLCODE;
  private AbstractCobolField c_18;
  private AbstractCobolField c_17;
  private AbstractCobolField c_16_COMMIT;
  private AbstractCobolField c_15_20;
  private AbstractCobolField c_14_16;
  private AbstractCobolField c_13_3;
  private AbstractCobolField c_12_NO;
  private AbstractCobolField c_11;
  private AbstractCobolField c_10_FETCHTBL_C1;
  private AbstractCobolField c_9_TOTAL;
  private AbstractCobolField c_8_0;
  private AbstractCobolField c_7_4;
  private AbstractCobolField c_6_1;
  private AbstractCobolField c_5_10;
  private AbstractCobolField c_4_30;
  private AbstractCobolField c_3_test_user;
  private AbstractCobolField c_2_testdb;
  private AbstractCobolField c_1;

  /* Attributes */

  private CobolFieldAttribute a_8;
  private CobolFieldAttribute a_7;
  private CobolFieldAttribute a_6;
  private CobolFieldAttribute a_5;
  private CobolFieldAttribute a_4;
  private CobolFieldAttribute a_3;
  private CobolFieldAttribute a_2;
  private CobolFieldAttribute a_1;



  /* String literals */
  public static final byte[] str_29_Undefined = CobolUtil.stringToBytes("Undefined error");
  public static final byte[] str_28_ROLLBACK = CobolUtil.toBytes((byte)0x52, (byte)0x4f, (byte)0x4c, (byte)0x4c, (byte)0x42, (byte)0x41, (byte)0x43, (byte)0x4b, (byte)0x00);
  public static final byte[] str_27_ERRCODE = CobolUtil.stringToBytes("ERRCODE: ");
  public static final byte[] str_26_PostgreSQL = CobolUtil.stringToBytes("PostgreSQL error");
  public static final byte[] str_25_Internal = CobolUtil.stringToBytes("Internal error");
  public static final byte[] str_24_Connection = CobolUtil.stringToBytes("Connection falied");
  public static final byte[] str_23_Record = CobolUtil.stringToBytes("Record not found");
  public static final byte[] str_22 = CobolUtil.stringToBytes(" ");
  public static final byte[] str_21_SQLCODE = CobolUtil.stringToBytes("SQLCODE: ");
  public static final byte[] str_20 = CobolUtil.stringToBytes("*** SQL ERROR ***");
  public static final byte[] str_19 = CobolUtil.stringToBytes("*** FETCHTBL FINISHED ***");
  public static final byte[] str_18_COMMIT = CobolUtil.toBytes((byte)0x43, (byte)0x4f, (byte)0x4d, (byte)0x4d, (byte)0x49, (byte)0x54, (byte)0x00);
  public static final byte[] str_17_NO = CobolUtil.stringToBytes("NO   NAME                 SALARY");
  public static final byte[] str_16 = CobolUtil.stringToBytes("---- -------------------- ------");
  public static final byte[] str_15_FETCHTBL_C1 = CobolUtil.toBytes((byte)0x46, (byte)0x45, (byte)0x54, (byte)0x43, (byte)0x48, (byte)0x54, (byte)0x42, (byte)0x4c, (byte)0x5f, (byte)0x43, (byte)0x31, (byte)0x00);
  public static final byte[] str_14_TOTAL = CobolUtil.stringToBytes("TOTAL RECORD: ");
  public static final byte[] str_13_test_user = CobolUtil.stringToBytes("test_user");
  public static final byte[] str_12_testdb = CobolUtil.stringToBytes("testdb");
  public static final byte[] str_11 = CobolUtil.stringToBytes("*** FETCHTBL STARTED ***");
  public static final CobolDataStorage str_10_ROLLBACK = CobolDataStorage.makeCobolDataStorage((byte)0x52, (byte)0x4f, (byte)0x4c, (byte)0x4c, (byte)0x42, (byte)0x41, (byte)0x43, (byte)0x4b, (byte)0x00);
  public static final CobolDataStorage str_9_COMMIT = CobolDataStorage.makeCobolDataStorage((byte)0x43, (byte)0x4f, (byte)0x4d, (byte)0x4d, (byte)0x49, (byte)0x54, (byte)0x00);
  public static final CobolDataStorage str_8_FETCHTBL_C1 = CobolDataStorage.makeCobolDataStorage((byte)0x46, (byte)0x45, (byte)0x54, (byte)0x43, (byte)0x48, (byte)0x54, (byte)0x42, (byte)0x4c, (byte)0x5f, (byte)0x43, (byte)0x31, (byte)0x00);
  public static final CobolDataStorage str_7_FETCHTBL_C1 = CobolDataStorage.makeCobolDataStorage((byte)0x46, (byte)0x45, (byte)0x54, (byte)0x43, (byte)0x48, (byte)0x54, (byte)0x42, (byte)0x4c, (byte)0x5f, (byte)0x43, (byte)0x31, (byte)0x00);
  public static final CobolDataStorage str_6_FETCHTBL_C1 = CobolDataStorage.makeCobolDataStorage((byte)0x46, (byte)0x45, (byte)0x54, (byte)0x43, (byte)0x48, (byte)0x54, (byte)0x42, (byte)0x4c, (byte)0x5f, (byte)0x43, (byte)0x31, (byte)0x00);
  public static final CobolDataStorage str_5_FETCHTBL_C1 = CobolDataStorage.makeCobolDataStorage((byte)0x46, (byte)0x45, (byte)0x54, (byte)0x43, (byte)0x48, (byte)0x54, (byte)0x42, (byte)0x4c, (byte)0x5f, (byte)0x43, (byte)0x31, (byte)0x00);
  public static final CobolDataStorage str_4_FETCHTBL_C1 = CobolDataStorage.makeCobolDataStorage((byte)0x46, (byte)0x45, (byte)0x54, (byte)0x43, (byte)0x48, (byte)0x54, (byte)0x42, (byte)0x4c, (byte)0x5f, (byte)0x43, (byte)0x31, (byte)0x00);
  public static final byte[] str_3_test = CobolUtil.stringToBytes("test      ");
  public static final byte[] str_2_DISCONNECT = CobolUtil.stringToBytes("DISCONNECT ALL");
  public static final byte[] str_1_SELECT = CobolUtil.stringToBytes("SELECT EMP_NO, EMP_NAME, EMP_SALARY FROM EMP ORDER BY EMP_NO");
  public static final byte[] str_0_SELECT = CobolUtil.stringToBytes("SELECT COUNT( * ) FROM EMP");

  /* Sections and Labels */
  private final static int l_FETCHTBL = 1;
  private final static int l_MAIN_SECTION = 2;
  private final static int l_MAIN_SECTION__MAIN_RTN = 3;
  private final static int l_MAIN_SECTION__ERROR_RTN = 4;
  private final static int l_Default_Error_Handler = 5;

  private CobolRunnable call_OCESQLDisconnect = null;
  private CobolRunnable call_OCESQLExec = null;
  private CobolRunnable call_OCESQLCursorClose = null;
  private CobolRunnable call_OCESQLCursorFetchOne = null;
  private CobolRunnable call_OCESQLCursorOpen = null;
  private CobolRunnable call_OCESQLCursorDeclare = null;
  private CobolRunnable call_OCESQLEndSQL = null;
  private CobolRunnable call_OCESQLExecSelectIntoOne = null;
  private CobolRunnable call_OCESQLSetResultParams = null;
  private CobolRunnable call_OCESQLStartSQL = null;
  private CobolRunnable call_OCESQLConnect = null;
}
